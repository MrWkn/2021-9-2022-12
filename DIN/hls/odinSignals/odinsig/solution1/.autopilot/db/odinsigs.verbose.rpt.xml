<profile>

<section name = "Vitis HLS Report for 'odinsigs'" level="0">
<item name = "Date">Thu Nov 24 21:27:50 2022
</item>
<item name = "Version">2021.1 (Build 3247384 on Thu Jun 10 19:36:33 MDT 2021)</item>
<item name = "Project">odinsig</item>
<item name = "Solution">solution1 (Vivado IP Flow Target)</item>
<item name = "Product family">zynquplus</item>
<item name = "Target device">xczu9eg-ffvb1156-2-e</item>
</section>

<section name = "Performance Estimates" level="0">
<item name = "Timing">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="4">Clock, Target, Estimated, Uncertainty</keys>
<column name="ap_clk">10.00 ns, 1.000 ns, 2.70 ns</column>
</table>
</item>
</section>
</item>
<item name = "Latency">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="8">, min, max, min, max, min, max, Type</keys>
<column name="">2, 2, 20.000 ns, 20.000 ns, 3, 3, no</column>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="0">
<keys size="9">Instance, Module, min, max, min, max, min, max, Type</keys>
</table>
</item>
<item name = "Loop"><table name="" hasTotal="0">
<keys size="8">Loop Name, min, max, Latency, achieved, target, Count, Pipelined</keys>
</table>
</item>
</section>
</item>
</section>
</item>
</section>

<section name = "Utilization Estimates" level="0">
<item name = "Summary"><table name="" hasTotal="1">
<keys size="6">Name, BRAM_18K, DSP, FF, LUT, URAM</keys>
<column name="DSP">-, -, -, -, -</column>
<column name="Expression">-, -, 0, 2, -</column>
<column name="FIFO">-, -, -, -, -</column>
<column name="Instance">0, -, 296, 488, 0</column>
<column name="Memory">-, -, -, -, -</column>
<column name="Multiplexer">-, -, -, 20, -</column>
<column name="Register">-, -, 327, -, -</column>
<specialColumn name="Available">1824, 2520, 548160, 274080, 0</specialColumn>
<specialColumn name="Utilization (%)">0, 0, ~0, ~0, 0</specialColumn>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="1">
<keys size="7">Instance, Module, BRAM_18K, DSP, FF, LUT, URAM</keys>
<column name="control_s_axi_U">control_s_axi, 0, 0, 296, 488, 0</column>
</table>
</item>
<item name = "DSP"><table name="" hasTotal="0">
<keys size="3">Instance, Module, Expression</keys>
</table>
</item>
<item name = "Memory"><table name="" hasTotal="1">
<keys size="10">Memory, Module, BRAM_18K, FF, LUT, URAM, Words, Bits, Banks, W*Bits*Banks</keys>
</table>
</item>
<item name = "FIFO"><table name="" hasTotal="1">
<keys size="8">Name, BRAM_18K, FF, LUT, URAM, Depth, Bits, Size:D*B</keys>
</table>
</item>
<item name = "Expression"><table name="" hasTotal="1">
<keys size="7">Variable Name, Operation, DSP, FF, LUT, Bitwidth P0, Bitwidth P1</keys>
<column name="ap_block_state3">or, 0, 0, 2, 1, 1</column>
</table>
</item>
<item name = "Multiplexer"><table name="" hasTotal="1">
<keys size="5">Name, LUT, Input Size, Bits, Total Bits</keys>
<column name="ap_NS_fsm">20, 4, 1, 4</column>
</table>
</item>
<item name = "Register"><table name="" hasTotal="1">
<keys size="5">Name, FF, LUT, Bits, Const Bits</keys>
<column name="AEROUT_ACK_1_data_reg">32, 0, 32, 0</column>
<column name="AEROUT_ACK_1_vld_reg">0, 0, 1, 1</column>
<column name="AEROUT_ADDR_0_data_reg">32, 0, 32, 0</column>
<column name="AEROUT_ADDR_0_vld_reg">0, 0, 1, 1</column>
<column name="AEROUT_REQ_0_data_reg">32, 0, 32, 0</column>
<column name="AEROUT_REQ_0_vld_reg">0, 0, 1, 1</column>
<column name="CTRL_NEURMEM_ADDR_0_data_reg">32, 0, 32, 0</column>
<column name="CTRL_NEURMEM_ADDR_0_vld_reg">0, 0, 1, 1</column>
<column name="CTRL_SCHED_POP_N_0_data_reg">32, 0, 32, 0</column>
<column name="CTRL_SCHED_POP_N_0_vld_reg">0, 0, 1, 1</column>
<column name="ack_o_0_data_reg">32, 0, 32, 0</column>
<column name="ack_o_0_vld_reg">0, 0, 1, 1</column>
<column name="addr_o_1_data_reg">32, 0, 32, 0</column>
<column name="addr_o_1_vld_reg">1, 0, 1, 0</column>
<column name="ap_CS_fsm">3, 0, 3, 0</column>
<column name="pop_n_1_data_reg">32, 0, 32, 0</column>
<column name="pop_n_1_vld_reg">1, 0, 1, 0</column>
<column name="postneuron_1_data_reg">32, 0, 32, 0</column>
<column name="postneuron_1_vld_reg">1, 0, 1, 0</column>
<column name="req_o_1_data_reg">32, 0, 32, 0</column>
<column name="req_o_1_vld_reg">1, 0, 1, 0</column>
</table>
</item>
</section>
</item>
</section>

<section name = "Interface" level="0">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">RTL Ports, Dir, Bits, Protocol, Source Object, C Type</keys>
<column name="s_axi_control_AWVALID">in, 1, s_axi, control, pointer</column>
<column name="s_axi_control_AWREADY">out, 1, s_axi, control, pointer</column>
<column name="s_axi_control_AWADDR">in, 7, s_axi, control, pointer</column>
<column name="s_axi_control_WVALID">in, 1, s_axi, control, pointer</column>
<column name="s_axi_control_WREADY">out, 1, s_axi, control, pointer</column>
<column name="s_axi_control_WDATA">in, 32, s_axi, control, pointer</column>
<column name="s_axi_control_WSTRB">in, 4, s_axi, control, pointer</column>
<column name="s_axi_control_ARVALID">in, 1, s_axi, control, pointer</column>
<column name="s_axi_control_ARREADY">out, 1, s_axi, control, pointer</column>
<column name="s_axi_control_ARADDR">in, 7, s_axi, control, pointer</column>
<column name="s_axi_control_RVALID">out, 1, s_axi, control, pointer</column>
<column name="s_axi_control_RREADY">in, 1, s_axi, control, pointer</column>
<column name="s_axi_control_RDATA">out, 32, s_axi, control, pointer</column>
<column name="s_axi_control_RRESP">out, 2, s_axi, control, pointer</column>
<column name="s_axi_control_BVALID">out, 1, s_axi, control, pointer</column>
<column name="s_axi_control_BREADY">in, 1, s_axi, control, pointer</column>
<column name="s_axi_control_BRESP">out, 2, s_axi, control, pointer</column>
<column name="ap_clk">in, 1, ap_ctrl_hs, odinsigs, return value</column>
<column name="ap_rst_n">in, 1, ap_ctrl_hs, odinsigs, return value</column>
<column name="interrupt">out, 1, ap_ctrl_hs, odinsigs, return value</column>
<column name="AEROUT_ADDR">in, 32, ap_none, AEROUT_ADDR, pointer</column>
<column name="AEROUT_REQ">in, 32, ap_none, AEROUT_REQ, pointer</column>
<column name="AEROUT_ACK">out, 32, ap_none, AEROUT_ACK, pointer</column>
<column name="CTRL_SCHED_POP_N">in, 32, ap_none, CTRL_SCHED_POP_N, pointer</column>
<column name="CTRL_NEURMEM_ADDR">in, 32, ap_none, CTRL_NEURMEM_ADDR, pointer</column>
<column name="AEROUT_CTRL_BUSY">in, 32, ap_none, AEROUT_CTRL_BUSY, pointer</column>
</table>
</item>
</section>
</profile>
